#!/bin/bash

# Function to read clipboard contents
read_clipboard() {
    local clipboard_content
    if [[ "$OSTYPE" == "darwin"* ]]; then
        clipboard_content=$(pbpaste)
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        clipboard_content=$(xclip -selection clipboard -o 2>/dev/null || xsel -b 2>/dev/null)
    elif [[ "$OSTYPE" == "msys" ]]; then
        clipboard_content=$(powershell.exe -command "Get-Clipboard" 2>/dev/null)
    else
        echo "Error: Unsupported operating system"
        exit 1
    fi
    echo "$clipboard_content"
}

put_to_clipboard() {
    local string="$1"
    if command -v xclip &>/dev/null; then
        echo -n "$string" | xclip -selection clipboard
    elif command -v xsel &>/dev/null; then
        echo -n "$string" | xsel --clipboard --input
    elif command -v pbcopy &>/dev/null; then
        echo -n "$string" | pbcopy
    else
        echo "Error: Clipboard not supported on this system." >&2
        return 1
    fi
}

# Function to extract PR number from GitHub URL
get_pr_number() {
    local input="$1"
    local pr_number
    pr_number=$(echo "$input" | grep -oE "pull\/[0-9]+" | awk -F '/' '{ print $2 }')
    echo "$pr_number"
}

# Function to add worktree for the PR branch
add_pr_worktree() {
    local pr_number="$1"
    local branch_name
    set -x
    remote_branch=refs/pull/$pr_number/head
    # get hash of the remote branch
    remote_hash=$(git ls-remote --exit-code origin "$remote_branch" | awk '{print $1}')
    local_branch=pr-$pr_number
    set +x
    printf "Branch name: %s\n" "$local_branch"
    if [ -z "$local_branch" ]; then
        echo "Error: Invalid PR number or URL"
        exit 1
    fi
    git branch -D "$local_branch" 2>/dev/null
    git worktree remove "../$local_branch" 2>/dev/null
    if [ ! -d "../$local_branch" ]; then
        set -x
        git fetch origin "$remote_branch:$local_branch" && git worktree add "../$local_branch" "$local_branch" 
        echo "cd ../$local_branch" | put_to_clipboard
        set +x
    else
        echo "Error: Directory ../$local_branch already exists"
        exit 1
    fi
}

# Main function
main() {
    local input="$1"
    local pr_number

    # Check if input is a PR URL or PR number
    if [[ "$input" =~ ^https:\/\/github\.com\/.*\/pull\/[0-9]+\/? ]]; then
        pr_number=$(get_pr_number "$input")
    elif [[ "$input" =~ ^[0-9]+$ ]]; then
        pr_number="$input"
    else
        echo "Error: Invalid input. Please provide a PR URL or PR number."
        exit 1
    fi

    # Validate PR number and add worktree
    if [ -z "$pr_number" ]; then
        echo "Error: Invalid PR number or URL"
        exit 1
    fi
    add_pr_worktree "$pr_number"
}

# Determine input source: clipboard, PR number, or PR URL
if [ "$#" -eq 0 ]; then
    # Read from clipboard if no arguments provided
    main "$(read_clipboard)"
else
    # Process provided input
    main "$1"
fi
